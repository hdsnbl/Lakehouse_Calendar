@page "/makeRequest"
@inject ICalendar calendar;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime

<PageTitle>MakeRequest</PageTitle>

<h1>Make a Request</h1>

<section style="
    display: block;
    width: 80%; /* width of the container box */
    max-width: 500px; /* optional max width */
    /*margin: 50px auto;  center horizontally on the page */
    border: 2px solid #333; /* box border */
    padding: 10px; /* space inside the box */
    background-color: #f5f5f5; /* optional background */
    box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* optional shadow */
    justify-items: center; /* center cells horizontally */
    align-items: center; /* center cells vertically */
    text-align: center; /* center text inside cells */
">
    
    <b>Date Range:</b>
    <div style="margin: 0 5px 10px 0;">
        <label for="start">Start Date: </label> <input type="date" id="start" name="start" @bind="start"/>
        <label for="end">End Date: </label> <input type="date" id="end" name="end" @bind="end"/>
    </div>
    <b>Family Name:</b>
    <div style="margin: 0 5px 10px 0;">
        <input type="text" id="family" name="family" placeholder="Enter your family name" @bind="family" />
    </div>
    <b>Is it Exclusive?</b>
    <div style="margin: 0 5px 10px 0;">
        <label for="exclusive">Exclusive: </label> <input type="checkbox" id=" exclusive" name="exclusive" @bind="exclusive" />
    </div>
    

    <button @onclick="makeRequest" style="background-color: lightgreen">Make Request</button>

    <div id="dateError" class="modal" style="@error">
        <!-- Modal content -->
        <div class="modal-content">
            <h2 style="background-color:red">Errors:</h2>
            <h3>@errorText</h3>
            <div>
                <button class="button" id="cancel" onclick="document.getElementById('dateError').style.display='none'">&times;</button>               @* close the modal *@
            </div>
        </div>
    </div>
    
    
</section>

@code {
    DateTime start = DateTime.Now;
    DateTime end = DateTime.Now;
    string family = "";
    bool exclusive;
    bool? approved;
    private string error = "display:none";
    private string errorText = "";
    private string permission = "display:none";
    bool permissionVisible = true;
    Request request;



    protected override void OnInitialized()
    {

    }

    private void exit()
    {
        bool permissionVisible = false;
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private void makeRequest()
    {
        if (!ValidateRequest())
        {
            return;
        }

        for (DateTime date = start.Date; date <= end.Date; date = date.AddDays(1))
        {   
            var calendarItem = new CalendarItem();

            calendarItem.Date = date;
            calendarItem.Name = family;
            calendarItem.Exclusive = exclusive;
            //calendarItem.Requests.Add(new Request(new Random(100000).Next(), date, family, exclusive));
            calendarItem.Approved = null;
            calendar.Items.Add(calendarItem);

            ApiService.AddCalendarEvent(
                name: family,
                exclusive: exclusive,
                approved: approved,
                date: date
            );

            if (start.Date == date)
            {
                request = new Request(calendarItem);
            }else if (start.Date != date)
            {
                request.FullRequest.Add(calendarItem);
            }
        }

        


        //if (exclusive == true){
        //permission = "display:block;white-space: pre-wrap;text-align: center";
        //send message to parents asking for permission
        //}

        NavigationManager.NavigateTo("/Requests");

    }

    private bool ValidateRequest()
    {
        bool valid = true;
        error = "display:none";
        errorText = "";
        if (end < start)
        {
            error = "display:block;white-space: pre-wrap;text-align: center";
            errorText += "End date is before Start date\n\r";
            valid = false;
        }
        if (family == "")
        {
            error = "display:block;white-space: pre-wrap;text-align: center";
            errorText += "Enter a family name\n\r";
            valid = false;
        }
        return valid;
    }
}

